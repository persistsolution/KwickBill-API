name: Node.js CI with OWASP Dependency Check, PM2, Docker, and Trivy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [  "main" ]

jobs:
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.12.0]

    steps:
    # Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Set up Node.js
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    # Check and Install Bun
    - name: Ensure Bun is Installed
      run: |
        if ! command -v bun &> /dev/null; then
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH
        fi
        bun --version

    # Check and Install PM2
    - name: Ensure PM2 is Installed
      run: |
        if ! command -v pm2 &> /dev/null; then
          npm install -g pm2
          echo "$(npm bin -g)" >> $GITHUB_PATH
        fi
        pm2 --version

    # Install dependencies with Bun
    - name: Install Dependencies
      run: bun install

    # Check and Install .NET SDK
    - name: Ensure .NET SDK is Installed
      run: |
        if ! command -v dotnet &> /dev/null; then
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https
          wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y dotnet-sdk-6.0
        fi
        dotnet --version

    # Generate Package Lock File
    - name: Generate Package Lock File
      run: npm install --package-lock-only

    # Run OWASP Dependency Check
    - name: Run OWASP Dependency Check
      run: |
        dependency-check/dependency-check/bin/dependency-check.sh \
          --scan . \
          --format "ALL" \
          --out ./owasp-report \
          --failOnCVSS 5 \
          --disableAssembly \
          --suppression suppressions.xml || true
        if [ ! -d "./owasp-report" ]; then
          echo "OWASP report directory not found!"
          exit 1
        fi

    # Upload OWASP Reports
    - name: Upload OWASP Reports
      if: always()
      run: |
        if [ -d "./owasp-report" ]; then
          echo "Uploading OWASP reports..."
        else
          echo "No OWASP report directory found. Skipping upload."
        fi
      uses: actions/upload-artifact@v3
      with:
        name: OWASP Dependency Check Report
        path: ./owasp-report

    # Build the source code
    - name: Build the Source Code
      run: |
        bun build index.ts --if-present

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and Push Docker Image
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/my-app:latest

    # Deploy the Docker container
    - name: Deploy Docker Container
      run: |
        docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest
        docker stop my-app || true
        docker rm my-app || true
        docker run -d --name my-app -p 3001:3000 ${{ secrets.DOCKER_USERNAME }}/my-app:latest

    # Run Trivy File System Scan
    - name: Run Trivy File System Scan
      run: |
        if ! command -v trivy &> /dev/null; then
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          export PATH=$PATH:$(pwd)/bin
        fi
        trivy fs --exit-code 0 --severity MEDIUM,HIGH,CRITICAL .
        trivy fs --exit-code 1 --severity CRITICAL .
      shell: bash
